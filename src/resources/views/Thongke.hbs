<main class="app-content">
  <div class="row">
    <div class="col-md-12">
      <div class="app-title">
        <ul class="app-breadcrumb breadcrumb">
          <li class="breadcrumb-item"><a href="#"><b>Th·ªëng k√™</b></a></li>
        </ul>
        <div id="clock"></div>
      </div>
    </div>
  </div>
  <div class="row">
    <!--Left-->
    <div class="col-md-12 col-lg-6">
      <div class="row">
        <!-- col-6 -->
        <div class="col-md-6">
          <div class="widget-small primary coloured-icon"><i class='icon bx bxs-user-account fa-3x'></i>
            <div class="info">
              <h4>T·ªïng Chuy·∫øn</h4>
              <p><b id="tongdonhang"> </b></p>
              <p class="info-tong">T·ªïng s·ªë chuy·∫øn.</p>
            </div>
          </div>
        </div>
        <!-- col-6 -->
        <div class="col-md-6">
          <div class="widget-small info coloured-icon"><i class='icon bx bxs-data fa-3x'></i>
            <div class="info">
              <h4>T·ªïng doanh thu</h4>
              <p><b id="tongdoanhthu"></b></p>
              <p class="info-tong">T·ªïng doanh thu .</p>
            </div>
          </div>
        </div>
        <div class="col-md-12">
          <div class="tile">
            <h3 class="tile-title">üìä Bi·ªÉu ƒë·ªì doanh thu</h3>
            <div class="embed-responsive embed-responsive-16by9" style="padding-bottom: 80px; margin-top: 30px;">
              <div class="embed-responsive-item">

                <canvas data-type="line" class="doanhthu" data-color-datalabels="#2e2a2a"
                  style="text-align: center;"></canvas>
              </div>

            </div>
          </div>
        </div>
        <!-- col-12 -->


        <div class="col-md-12">
          <div class="tile">
            <h3 class="tile-title">üìä Bi·ªÉu ƒë·ªì h√≥a ƒë∆°n</h3>
            <div class="embed-responsive embed-responsive-16by9" style="height: 380px;">
              <div class="embed-responsive-item">
                <canvas data-type="bar" class="hoadon" data-color-datalabels="#fffff"></canvas>
              </div>
            </div>
          </div>
        </div>



        <!-- / col-12 -->
        <!-- col-12 -->

        <!-- / col-12 -->
      </div>
    </div>
    <!--END left-->
    <!--Right-->
    <div class="col-md-12 col-lg-6">
      <div class="col-md-12">
        <div class="tile">
          <h3 class="tile-title">Top 10 xe </h3>
          <div>
            <table class="table table-bordered">
              <thead>
                <tr>
                  <th>BKS</th>
                  <th>T√™n xe</th>
                  <th>S·ªë chuy·∫øn</th>
                  <th>Chi ti·∫øt</th>
                </tr>
              </thead>
              <tbody>
                {{#each data}}
                <tr>
                  <td>{{this.BKS}}</td>
                  <td>{{this.MauXe}} </td>
                  <td>{{this.SoChuyen}} chuy·∫øn</td>
                  <td > <a class="badge bg-info"
                  href="/quanlyxe/ChiTietXe/{{this._id}}"> Xem
                  chi ti·∫øt</a></td>
                </tr>
                {{/each}}

              </tbody>
            </table>
          </div>
          <!-- / div tr·ªëng-->
        </div>
      </div>
      <div class="col-md-12">
        <div class="tile">
          <h3 class="tile-title">üìä Bi·ªÉu ƒë·ªì h√≥a ƒë∆°n</h3>

          <div class="embed-responsive embed-responsive-16by9">
            <div class="embed-responsive-item">
              <canvas data-type="pie" id="hoadonphamtram" data-color-datalabels="#fffff"></canvas>

            </div>
          </div>
          <form action="/thongke" method="get" id="formid">
            <select class="form-control" id="exampleSelect1" name="start_date" onchange="submitForm()"
              style="width: 200px; font-size: 15px; height: 40px;">
              <option>-- Ch·ªçn th√°ng --</option>
              <option value="1">Th√°ng 1</option>
              <option value="2">Th√°ng 2</option>
              <option value="3">Th√°ng 3</option>
              <option value="4">Th√°ng 4</option>
              <option value="5">Th√°ng 5</option>
              <option value="6">Th√°ng 6</option>
              <option value="7">Th√°ng 7</option>
              <option value="8">Th√°ng 8</option>
              <option value="9">Th√°ng 9</option>
              <option value="10">Th√°ng 10</option>
              <option value="11">Th√°ng 11</option>
              <option value="12">Th√°ng 12</option>
            </select>
          </form>
        </div>

      </div>

    </div>

    <!--END right-->
  </div>
  </div>
</main>
<!-- Essential javascripts for application to work-->
<script src="/public/js/jquery-3.2.1.min.js"></script>
<script src="/public/js/popper.min.js"></script>
<script src="/public/js/bootstrap.min.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script src="src/jquery.table2excel.js"></script>
<script src="/publicjs/main.js"></script>
<!-- The javascript plugin to display page loading on top-->
<script src="/public/js/plugins/pace.min.js"></script>
<!-- Page specific javascripts-->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.js"></script>
<!-- Data table plugin-->
<script type="text/javascript" src="/public/js/plugins/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="/public/js/plugins/dataTables.bootstrap.min.js"></script>
<script type="text/javascript">$('#sampleTable').DataTable();</script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>
{{!-- doanh thu --}}
<script>
    const selectElement = document.getElementById('exampleSelect1'); 
  function submitForm() {
    

    // Submit the form using JavaScript
    const formElement = document.getElementById('formid'); // Replace 'yourFormId' with the actual form's ID
    formElement.submit();
  }

  async function load() {
    const MONTHS = [
      "T 1",
      "T 2",
      "T 3",
      "T 4",
      "T 5",
      "T 6",
      "T 6",
      "T 7",
      "T 9",
      "T 10",
      "T 11",
      "T 12",
      "",
    ];
    const queryString = window.location.search;
    const urlParams = new URLSearchParams(queryString);
    const startDate = urlParams.get('start_date');
     selectElement.value = startDate;
    console.log(startDate)
    const fetchChartData = async () => {
      try {
        const response = await fetch("/thongke/thongketheoThang");
        const data = await response.json();
        return data;
      } catch (error) {
        console.error(error);
        return [];
      }
    };

    Chart.register(ChartDataLabels);

    const labels = MONTHS.slice(0, 13);

    const allCanvas = document.querySelectorAll(".doanhthu");

    allCanvas.forEach(async (el) => {
      const { type, colorDatalabels } = el.dataset;

      const chartData = await fetchChartData();

      const config = {
        type: el.dataset.type,
        data: {
          labels: labels,
          datasets: [
            {
              label: "Doanh thu",
              fillColor: "rgba(9, 109, 239, 0.651)",
              pointColor: "rgb(9, 109, 239)",
              strokeColor: "rgb(9, 109, 239)",
              pointStrokeColor: "rgb(9, 109, 239)",
              pointHighlightFill: "rgb(9, 109, 239)",
              pointHighlightStroke: "rgb(9, 109, 239)",
              data: chartData.map((item, index) => item.doanh_thu),
              tension: 0.2,
            },
            {
              label: "L·ª£i nhu·∫≠n",

              fillColor: "rgba(9, 109, 239, 0.651)  ",
              pointColor: "rgb(9, 109, 239)",
              strokeColor: "rgb(9, 109, 239)",
              pointStrokeColor: "rgb(9, 109, 239)",
              pointHighlightFill: "rgb(9, 109, 239)",
              pointHighlightStroke: "rgb(9, 109, 239)",
              data: chartData.map((item, index) => item.loi_nhuan),
            }
          ],
        },
        options: {
          aspectRatio: 16 / 9,
          layout: {
            padding: 20,
          },
          plugins: {
            tooltip: {
              titleFont: {
                size: 22,
              },
              bodyFont: {
                size: 22,
              },
              callbacks: {
                label: (context) => `Total: ${context.formattedValue} ƒë`,
              },
            },
            datalabels: {
              color: colorDatalabels,
              font: { size: 11 },
              formatter: function (value, context) {
                return value == 0 ? "" : value;

              },
              display: function (context) {
                if (type === "line")
                  return (
                    context.dataIndex > 0 && context.dataIndex < labels.length - 1
                  );

                return true;
              },
            },
          },
        },
      };

      new Chart(el, config);
    });

    const fetchChartDataHD = async () => {
      try {
        const response = await fetch("/thongke/thongkeHDtheoThang");
        const data = await response.json();
        return data;
      } catch (error) {
        console.error(error);
        return [];
      }
    };


    const Canvas = document.querySelectorAll(".hoadon");

    Canvas.forEach(async (el) => {
      const { type, colorDatalabels } = el.dataset;

      const chartData = await fetchChartDataHD();

      const config = {
        type: el.dataset.type,
        data: {
          labels: labels,
          datasets: [
            {
              label: "T·ªïng ƒë∆°n",
              backgroundColor: "#ADCBF3",
              data: chartData.map((item, index) => item.tong_don),
              tension: 0.1,
            },
            {
              label: "ƒê∆°n th√†nh c√¥ng",
              backgroundColor: "#B9FFD3",
              data: chartData.map((item, index) => item.don_thanh_cong),
              tension: 0.1,
            },
            {
              label: "ƒê∆°n h·ªßy",
              backgroundColor: "red",
              data: chartData.map((item, index) => item.don_huy),
              tension: 0.1,

            },
            {
              label: "Kh√°c",
              backgroundColor: "#FDE1C3",
              data: chartData.map((item, index) => item.khac),
              tension: 0.1,

            }
          ],
        },
        options: {
          aspectRatio: 16 / 9,
          layout: {
            padding: 20,
          },
          plugins: {
            tooltip: {
              titleFont: {
                size: 22,
              },
              bodyFont: {
                size: 22,
              },
              callbacks: {
                label: (context) => `Total: ${context.formattedValue} ƒë∆°n`,
              },
            },
            datalabels: {
              color: colorDatalabels,
              font: { size: 11 },
              formatter: function (value, context) {
                return value == 0 ? "" : value;
              },
              display: function (context) {
                if (type === "line")
                  return (
                    context.dataIndex > 0 && context.dataIndex < labels.length - 1
                  );

                return true;
              },
            },
          },
        },
      };

      new Chart(el, config);
    });
    const response1 = await fetch(`/thongke/donhang`).then(response => response.json());
    document.getElementById('tongdonhang').innerHTML = response1.totalOrders + " Chuy·∫øn";

    const response = await fetch(`/thongke/doanhthu`).then(response => response.json());
    document.getElementById('tongdoanhthu').innerHTML = new Intl.NumberFormat('vi-VN').format(response[0].tong_doanh_thu_nam, {
      minimumFractionDigits: 2,
      decimal: ',',
      thousandsSeparator: '.',
    }) + " ƒë";



    // Submit the form using JavaScript

    const fetchChartDataHDPT = async () => {
      try {
        const response = await fetch(startDate ? `/thongke/hoadonphamtram?start_date=${startDate}` : "thongke/hoadonphamtram");
        const data = await response.json();
        return data;
      } catch (error) {
        console.error(error);
        return [];
      }
    };
    const xValues = ["Th√†nh c√¥ng", "ƒê∆°n h·ªßy", "Kh√°c"];
    const data = await fetchChartDataHDPT();
    console.log(data)
    const yValues = [data.don_thanh_cong, data.don_huy, data.khac];
    const barColors = [
      "#8EFFB8",
      "#F9BABA",
      "#FFCC95"
    ];

    new Chart("hoadonphamtram", {
      type: "pie",
      data: {
        labels: xValues,
        datasets: [{
          backgroundColor: barColors,
          data: yValues
        }]
      },
      options: {
        title: {
          display: true,
          text: "World Wide Wine Production 2018"
        }
      }
    });

  }
  load()




</script>